<?xml version="1.0" standalone="no"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<chapter id="thunarx-python-overview"
  xmlns:xi="http://www.w3.org/2001/XInclude">

    <title>Overview</title>

    <para>Writing a Thunarx-Python extension is a fairly straight-forward process. 
    One simply imports the thunarx module and creates a class which is derived from a number 
    of the thunarx module's classes. When an extension derives a class, it becomes a "provider", 
    telling Thunarx to ask it for information. There are several types of providers 
    available for extensions to use: there is MenuProvider, PropertyPageProvider, RenamerProvider,
    and PreferencePageProvider, all of which will be explained 
    in more detail below. Your class can be derived from multiple providers.</para>
    
    <para>Here are the basic steps:</para>
    
    <para>1. A script is written and installed to the standard python extensions install path</para>
    <para>2. Thunar is (re)started and loads the Thunarx-Python C extension, which in turn loads all python extensions</para>
    <para>3. Any python script in the standard python extensions install path that imports the thunarx module and derives 
    the main class from a thunarx module class will be loaded</para>
    
    <note>
<title>A note about the standard python extensions install path</title>

<para>The system-wide install path is $PREFIX/lib/thunarx-2/python (or thunarx-1). However, some 64 bit distributions, 
such as Fedora, put Thunarx-Python extensions in $PREFIX/lib64/thunarx-1/python  (or thunarx-1). </para>
    </note>

    <xi:include href="thunarx-python-overview-example.xml"/>

</chapter>

