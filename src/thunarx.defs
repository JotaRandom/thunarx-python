;; -*- scheme -*-
; object definitions ...
(define-object FileInfo
  (in-module "Thunarx")
  (c-name "ThunarxFileInfo")
  (gtype-id "THUNARX_TYPE_FILE_INFO")
)

(define-object MenuProvider
  (in-module "Thunarx")
  (c-name "ThunarxMenuProvider")
  (gtype-id "THUNARX_TYPE_MENU_PROVIDER")
)

(define-object PreferencesProvider
  (in-module "Thunarx")
  (c-name "ThunarxPreferencesProvider")
  (gtype-id "THUNARX_TYPE_PREFERENCES_PROVIDER")
)

(define-object PropertyPage
  (in-module "Thunarx")
  (parent "GtkBin")
  (c-name "ThunarxPropertyPage")
  (gtype-id "THUNARX_TYPE_PROPERTY_PAGE")
)

(define-object PropertyPageProvider
  (in-module "Thunarx")
  (c-name "ThunarxPropertyPageProvider")
  (gtype-id "THUNARX_TYPE_PROPERTY_PAGE_PROVIDER")
)

(define-object ProviderPlugin
  (in-module "Thunarx")
  (c-name "ThunarxProviderPlugin")
  (gtype-id "THUNARX_TYPE_PROVIDER_PLUGIN")
)

(define-object Renamer
  (in-module "Thunarx")
  (parent "GtkVBox")
  (c-name "ThunarxRenamer")
  (gtype-id "THUNARX_TYPE_RENAMER")
)

(define-object RenamerProvider
  (in-module "Thunarx")
  (c-name "ThunarxRenamerProvider")
  (gtype-id "THUNARX_TYPE_RENAMER_PROVIDER")
)

;; Enumerations and flags ...


;; From thunarx-config.h

(define-function thunarx_check_version
  (c-name "thunarx_check_version")
  (return-type "const-gchar*")
  (parameters
    '("guint" "required_major")
    '("guint" "required_minor")
    '("guint" "required_micro")
  )
)



;; From thunarx-file-info.h

(define-function thunarx_file_info_get_type
  (c-name "thunarx_file_info_get_type")
  (return-type "GType")
)

(define-method get_name
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_get_name")
  (return-type "gchar*")
)

(define-method get_uri
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_get_uri")
  (return-type "gchar*")
)

(define-method get_parent_uri
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_get_parent_uri")
  (return-type "gchar*")
)

(define-method get_uri_scheme
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_get_uri_scheme")
  (return-type "gchar*")
)

(define-method get_mime_type
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_get_mime_type")
  (return-type "gchar*")
)

(define-method has_mime_type
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_has_mime_type")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "mime_type")
  )
)

(define-method is_directory
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_is_directory")
  (return-type "gboolean")
)

(define-method get_file_info
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_get_file_info")
  (return-type "GFileInfo*")
)

(define-method get_filesystem_info
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_get_filesystem_info")
  (return-type "GFileInfo*")
)

(define-method get_location
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_get_location")
  (return-type "GFile*")
)

(define-method changed
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_changed")
  (return-type "none")
)

(define-method renamed
  (of-object "ThunarxFileInfo")
  (c-name "thunarx_file_info_renamed")
  (return-type "none")
)

(define-function thunarx_file_info_list_get_type
  (c-name "thunarx_file_info_list_get_type")
  (return-type "GType")
)

(define-function thunarx_file_info_list_copy
  (c-name "thunarx_file_info_list_copy")
  (return-type "GList*")
  (parameters
    '("GList*" "file_infos")
  )
)

(define-function thunarx_file_info_list_free
  (c-name "thunarx_file_info_list_free")
  (return-type "none")
  (parameters
    '("GList*" "file_infos")
  )
)



;; From thunarx-menu-provider.h

(define-function thunarx_menu_provider_get_type
  (c-name "thunarx_menu_provider_get_type")
  (return-type "GType")
)

(define-method get_file_actions
  (of-object "ThunarxMenuProvider")
  (c-name "thunarx_menu_provider_get_file_actions")
  (return-type "GList*")
  (parameters
    '("GtkWidget*" "window")
    '("GList*" "files")
  )
)

(define-method get_folder_actions
  (of-object "ThunarxMenuProvider")
  (c-name "thunarx_menu_provider_get_folder_actions")
  (return-type "GList*")
  (parameters
    '("GtkWidget*" "window")
    '("ThunarxFileInfo*" "folder")
  )
)

(define-method get_dnd_actions
  (of-object "ThunarxMenuProvider")
  (c-name "thunarx_menu_provider_get_dnd_actions")
  (return-type "GList*")
  (parameters
    '("GtkWidget*" "window")
    '("ThunarxFileInfo*" "folder")
    '("GList*" "files")
  )
)



;; From thunarx-preferences-provider.h

(define-function thunarx_preferences_provider_get_type
  (c-name "thunarx_preferences_provider_get_type")
  (return-type "GType")
)

(define-method get_actions
  (of-object "ThunarxPreferencesProvider")
  (c-name "thunarx_preferences_provider_get_actions")
  (return-type "GList*")
  (parameters
    '("GtkWidget*" "window")
  )
)



;; From thunarx-property-page-provider.h

(define-function thunarx_property_page_provider_get_type
  (c-name "thunarx_property_page_provider_get_type")
  (return-type "GType")
)

(define-method get_pages
  (of-object "ThunarxPropertyPageProvider")
  (c-name "thunarx_property_page_provider_get_pages")
  (return-type "GList*")
  (parameters
    '("GList*" "files")
  )
)



;; From thunarx-property-page.h

(define-function thunarx_property_page_get_type
  (c-name "thunarx_property_page_get_type")
  (return-type "GType")
)

(define-function thunarx_property_page_new
  (c-name "thunarx_property_page_new")
  (is-constructor-of "ThunarxPropertyPage")
  (return-type "GtkWidget*")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-function thunarx_property_page_new_with_label_widget
  (c-name "thunarx_property_page_new_with_label_widget")
  (return-type "GtkWidget*")
  (parameters
    '("GtkWidget*" "label_widget")
  )
)

(define-method get_label
  (of-object "ThunarxPropertyPage")
  (c-name "thunarx_property_page_get_label")
  (return-type "const-gchar*")
)

(define-method set_label
  (of-object "ThunarxPropertyPage")
  (c-name "thunarx_property_page_set_label")
  (return-type "none")
  (parameters
    '("const-gchar*" "label")
  )
)

(define-method get_label_widget
  (of-object "ThunarxPropertyPage")
  (c-name "thunarx_property_page_get_label_widget")
  (return-type "GtkWidget*")
)

(define-method set_label_widget
  (of-object "ThunarxPropertyPage")
  (c-name "thunarx_property_page_set_label_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "label_widget")
  )
)



;; From thunarx-provider-factory.h

(define-function thunarx_provider_factory_get_type
  (c-name "thunarx_provider_factory_get_type")
  (return-type "GType")
)

(define-function thunarx_provider_factory_get_default
  (c-name "thunarx_provider_factory_get_default")
  (return-type "ThunarxProviderFactory*")
)

(define-method list_providers
  (of-object "ThunarxProviderFactory")
  (c-name "thunarx_provider_factory_list_providers")
  (return-type "GList*")
  (parameters
    '("GType" "type")
  )
)



;; From thunarx-provider-plugin.h

(define-function thunarx_provider_plugin_get_type
  (c-name "thunarx_provider_plugin_get_type")
  (return-type "GType")
)

(define-method get_resident
  (of-object "ThunarxProviderPlugin")
  (c-name "thunarx_provider_plugin_get_resident")
  (return-type "gboolean")
)

(define-method set_resident
  (of-object "ThunarxProviderPlugin")
  (c-name "thunarx_provider_plugin_set_resident")
  (return-type "none")
  (parameters
    '("gboolean" "resident")
  )
)

(define-method register_type
  (of-object "ThunarxProviderPlugin")
  (c-name "thunarx_provider_plugin_register_type")
  (return-type "GType")
  (parameters
    '("GType" "type_parent")
    '("const-gchar*" "type_name")
    '("const-GTypeInfo*" "type_info")
    '("GTypeFlags" "type_flags")
  )
)

(define-method add_interface
  (of-object "ThunarxProviderPlugin")
  (c-name "thunarx_provider_plugin_add_interface")
  (return-type "none")
  (parameters
    '("GType" "instance_type")
    '("GType" "interface_type")
    '("const-GInterfaceInfo*" "interface_info")
  )
)

(define-method register_enum
  (of-object "ThunarxProviderPlugin")
  (c-name "thunarx_provider_plugin_register_enum")
  (return-type "GType")
  (parameters
    '("const-gchar*" "name")
    '("const-GEnumValue*" "const_static_values")
  )
)

(define-method register_flags
  (of-object "ThunarxProviderPlugin")
  (c-name "thunarx_provider_plugin_register_flags")
  (return-type "GType")
  (parameters
    '("const-gchar*" "name")
    '("const-GFlagsValue*" "const_static_values")
  )
)



;; From thunarx-renamer-provider.h

(define-function thunarx_renamer_provider_get_type
  (c-name "thunarx_renamer_provider_get_type")
  (return-type "GType")
)

(define-method get_renamers
  (of-object "ThunarxRenamerProvider")
  (c-name "thunarx_renamer_provider_get_renamers")
  (return-type "GList*")
)



;; From thunarx-renamer.h

(define-function thunarx_renamer_get_type
  (c-name "thunarx_renamer_get_type")
  (return-type "GType")
)

(define-method get_help_url
  (of-object "ThunarxRenamer")
  (c-name "thunarx_renamer_get_help_url")
  (return-type "const-gchar*")
)

(define-method set_help_url
  (of-object "ThunarxRenamer")
  (c-name "thunarx_renamer_set_help_url")
  (return-type "none")
  (parameters
    '("const-gchar*" "help_url")
  )
)

(define-method get_name
  (of-object "ThunarxRenamer")
  (c-name "thunarx_renamer_get_name")
  (return-type "const-gchar*")
)

(define-method set_name
  (of-object "ThunarxRenamer")
  (c-name "thunarx_renamer_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method process
  (of-object "ThunarxRenamer")
  (c-name "thunarx_renamer_process")
  (return-type "gchar*")
  (parameters
    '("ThunarxFileInfo*" "file")
    '("const-gchar*" "text")
    '("guint" "index")
  )
)

(define-method load
  (of-object "ThunarxRenamer")
  (c-name "thunarx_renamer_load")
  (return-type "none")
  (parameters
    '("GHashTable*" "settings")
  )
)

(define-method save
  (of-object "ThunarxRenamer")
  (c-name "thunarx_renamer_save")
  (return-type "none")
  (parameters
    '("GHashTable*" "settings")
  )
)

(define-method get_actions
  (of-object "ThunarxRenamer")
  (c-name "thunarx_renamer_get_actions")
  (return-type "GList*")
  (parameters
    '("GtkWindow*" "window")
    '("GList*" "files")
  )
)

(define-method changed
  (of-object "ThunarxRenamer")
  (c-name "thunarx_renamer_changed")
  (return-type "none")
)



;; From thunarx.h


